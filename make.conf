ifeq ($(ROOT),)
ROOT=		/mobius
endif
INCLUDE=	$(ROOT)/include
LIB=		$(ROOT)/lib
BIN=		$(ROOT)/distrib
#DEFINES+=	-D__STRICT_ANSI__
DEFINES+=	-D__MOBIUS__
CFLAGS+=	-Wall -Wno-multichar -g $(DEFINES)
CPPFLAGS+=	$(CFLAGS) -fno-rtti -fno-exceptions
ASFLAGS+=	-g
CC=		gcc
LD=		ld
RC=		windres
%.d:	%.c
	echo -n $(dir $<) > $@
	$(CC) -c -M $< -I$(INCLUDE) -I./include $(CFLAGS) >> $@
%.d:	%.cpp
	echo -n $(dir $<) > $@
	$(CC) -c -M $< -I$(INCLUDE) -I./include $(CPPFLAGS) >> $@
%.d:	%.S
	echo -n $(dir $<) > $@
	$(CC) -c -M $< -I$(INCLUDE) -I./include $(ASFLAGS) >> $@
%.d:	%.asm
	nasm $(DEFINES) -M $< -o $(<:.asm=.o) > $@
%.res.d: %.rc
	echo $(@:.d=.o): $< > $@
%.o:	%.c
	$(CC) -c $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)
%.o:	%.cpp
	$(CC) -c $< -o $@ -I$(INCLUDE) -I./include $(CPPFLAGS)
%.o:	%.asm
	nasm $(DEFINES) -f win32 $< -o $@
%.o:	%.S
	$(CC) -c $< -o $@ -I$(INCLUDE) -I./include $(ASFLAGS)
%.S:	%.c
	$(CC) -S $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)
%.E:	%.c
	$(CC) -E $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)
%.E:	%.cpp
	$(CC) -E $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)
%.res.o: %.rc
	$(RC) -i $< -o $@
# Exports for DLL
ifeq ($(NO_EXP),)
%.exp:	%.def
	dlltool -d $< -e $@ -D $(<:.def=.dll)
endif
