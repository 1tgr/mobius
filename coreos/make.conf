ifeq ($(ROOT),)
ROOT=		/mobius
endif

ROOT:=	$(shell cd $(ROOT); pwd)

INCLUDE=	$(ROOT)/include
LIB=		$(ROOT)/lib
BIN=		$(ROOT)/distrib
#DEFINES+=	-D__STRICT_ANSI__
DEFINES+=	-D__MOBIUS__
CFLAGS+=	-Wall -Wno-multichar -g $(DEFINES)
CPPFLAGS+=	$(CFLAGS) -fno-rtti -fno-exceptions
ASFLAGS+=	-g
CC=		gcc
LD=		ld
RC=		windres

ifeq ($(OBJDIR),)
OBJDIR=	objects
endif

OBJS_IN_DIR=	$(addprefix $(OBJDIR)/, $(OBJS))

$(OBJDIR)/%.d:	%.c
	$(ROOT)/coreos/prepare $(OBJDIR)/$(dir $<) $@
	$(CC) -c -M $< -I$(INCLUDE) -I./include $(CFLAGS) >> $@

$(OBJDIR)/%.d:	%.cpp
	$(ROOT)/coreos/prepare $(OBJDIR)/$(dir $<) $@
	$(CC) -c -M $< -I$(INCLUDE) -I./include $(CPPFLAGS) >> $@

$(OBJDIR)/%.d:	%.S
	$(ROOT)/coreos/prepare $(OBJDIR)/$(dir $<) $@
	$(CC) -c -M $< -I$(INCLUDE) -I./include $(ASFLAGS) >> $@

$(OBJDIR)/%.d:	%.asm
	$(ROOT)/coreos/prepare $(OBJDIR)/$(dir <$) $@
	nasm $(DEFINES) -M $< -o $(<:.asm=.o) >> $@

$(OBJDIR)/%.res.d: %.rc
	$(ROOT)/coreos/prepare $(OBJDIR)/$(dir <$) $@
	echo $(<:.rc=.res.o): $< >> $@

$(OBJDIR)/%.o:	%.c
	$(CC) -c $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)

$(OBJDIR)/%.o:	%.cpp
	$(CC) -c $< -o $@ -I$(INCLUDE) -I./include $(CPPFLAGS)

$(OBJDIR)/%.o:	%.asm
	nasm $(DEFINES) -f win32 $< -o $@

$(OBJDIR)/%.o:	%.S
	$(CC) -c $< -o $@ -I$(INCLUDE) -I./include $(ASFLAGS)

$(OBJDIR)/%.S:	%.c
	$(CC) -S $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)

$(OBJDIR)/%.E:	%.c
	$(CC) -E $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)

$(OBJDIR)/%.E:	%.cpp
	$(CC) -E $< -o $@ -I$(INCLUDE) -I./include $(CFLAGS)

$(OBJDIR)/%.res.o: %.rc
	$(RC) -i $< -o $@

# Exports for DLL
ifeq ($(NO_EXP),)
$(OBJDIR)/%.exp:	%.def
	dlltool -d $< -e $@ -D $(notdir $(TARGET_D)) $(notdir $(TARGET)) $(notdir $(TARGET_DRIVER))
endif
